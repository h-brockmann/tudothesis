@inproceedings{abdullahWorstcaseCauseeffectReaction2019,
  title = {Worst-Case Cause-Effect Reaction Latency in Systems with Non-Blocking Communication},
  booktitle = {2019 {{Design}}, {{Automation}} \& {{Test}} in {{Europe Conference}} \& {{Exhibition}} ({{DATE}})},
  author = {Abdullah, Jakaria and Dai, Gaoyang and Yi, Wang},
  year = {2019},
  pages = {1625--1630},
  publisher = {IEEE},
  isbn = {3-9819263-2-3},
  file = {C:\Users\Henni\Zotero\storage\QB3PSWA8\Abdullah et al. - 2019 - Worst-case cause-effect reaction latency in systems with non-blocking communication.pdf}
}

@inproceedings{abellaComparisonDeterministicProbabilistic2014,
  title = {On the {{Comparison}} of {{Deterministic}} and {{Probabilistic WCET Estimation Techniques}}},
  booktitle = {2014 26th {{Euromicro Conference}} on {{Real-Time Systems}}},
  author = {Abella, Jaume and Hardy, Damien and Puaut, Isabelle and Quinones, Eduardo and Cazorla, Francisco J.},
  year = {2014},
  month = jul,
  pages = {266--275},
  publisher = {IEEE},
  address = {Madrid, Spain},
  doi = {10.1109/ECRTS.2014.16},
  urldate = {2025-02-14},
  file = {C:\Users\Henni\Zotero\storage\HVUUR8TC\Abella et al. - 2014 - On the Comparison of Deterministic and Probabilistic WCET Estimation Techniques.pdf}
}

@inproceedings{abeniIntegratingMultimediaApplications1998,
  title = {Integrating Multimedia Applications in Hard Real-Time Systems},
  booktitle = {Proceedings 19th {{IEEE Real-Time Systems Symposium}} ({{Cat}}. {{No}}.{{98CB36279}})},
  author = {Abeni, L. and Buttazzo, G.},
  year = {1998},
  pages = {4--13},
  publisher = {IEEE Comput. Soc},
  address = {Madrid, Spain},
  doi = {10.1109/REAL.1998.739726},
  urldate = {2025-02-13},
  isbn = {978-0-8186-9212-3},
  file = {C:\Users\Henni\Zotero\storage\V9JK7GFI\Abeni und Buttazzo - 1998 - Integrating multimedia applications in hard real-time systems.pdf}
}

@article{altmeyerWcetAnalysisPreemptive2008,
  title = {Wcet Analysis for Preemptive Scheduling},
  author = {Altmeyer, Sebastian and Gebhard, Gernot},
  year = {2008},
  file = {C:\Users\Henni\Zotero\storage\HT9L57VT\Altmeyer und Gebhard - 2008 - Wcet analysis for preemptive scheduling.pdf}
}

@article{baiComputingExecutionTimes2023,
  title = {Computing {{Execution Times With Execution Decision Diagrams}} in the {{Presence}} of {{Out-of-Order Resources}}},
  author = {Bai, Zhenyu and Cass{\'e}, Hugues and Carle, Thomas and Rochange, Christine},
  year = {2023},
  month = nov,
  journal = {IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems},
  volume = {42},
  number = {11},
  pages = {3665--3678},
  issn = {0278-0070, 1937-4151},
  doi = {10.1109/TCAD.2023.3258752},
  urldate = {2025-03-02},
  copyright = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/IEEE.html},
  file = {C:\Users\Henni\Zotero\storage\CV64B7A7\Bai et al. - 2023 - Computing Execution Times With Execution Decision Diagrams in the Presence of Out-of-Order Resources.pdf}
}

@article{bakerStackbasedSchedulingRealtime1991,
  title = {Stack-Based Scheduling of Realtime Processes},
  author = {Baker, T. P.},
  year = {1991},
  month = mar,
  journal = {Real-Time Systems},
  volume = {3},
  number = {1},
  pages = {67--99},
  issn = {0922-6443, 1573-1383},
  doi = {10.1007/BF00365393},
  urldate = {2024-11-17},
  copyright = {http://www.springer.com/tdm},
  langid = {english},
  file = {C:\Users\Henni\Zotero\storage\8S8JHJR8\Baker - 1991 - Stack-based scheduling of realtime processes.pdf}
}

@article{beckerMATERIALFrameworkModeling2024,
  title = {The {{MATERIAL}} Framework: {{Modeling}} and {{AuTomatic}} Code {{Generation}} of {{Edge Real-TIme AppLications}} under the {{QNX RTOS}}},
  shorttitle = {The {{MATERIAL}} Framework},
  author = {Becker, Matthias and Casini, Daniel},
  year = {2024},
  month = sep,
  journal = {Journal of Systems Architecture},
  volume = {154},
  pages = {103219},
  issn = {13837621},
  doi = {10.1016/j.sysarc.2024.103219},
  urldate = {2024-11-07},
  abstract = {Modern edge real-time automotive applications are becoming more complex, dynamic, and distributed, moving away from conventional static operating environments to support advanced driving assistance and autonomous driving functionalities. This shift necessitates formulating more complex task models to represent the evolving nature of these applications aptly. Modeling of real-time automotive systems is typically performed leveraging Architectural Languages (ALs) such as Amalthea, which are commonly used by the industry to describe the characteristics of processing platforms, operating systems, and tasks. However, these architectural languages are originally derived for classical automotive applications and need to evolve to meet the needs of next-generation applications.},
  langid = {english},
  file = {C:\Users\Henni\Zotero\storage\M985NA8T\Becker und Casini - 2024 - The MATERIAL framework Modeling and AuTomatic code Generation of Edge Real-TIme AppLications under.pdf}
}

@article{beckerModelCheckingAmalthea,
  title = {Model {{Checking Amalthea}} with {{Spin}}},
  author = {Becker, Jan Steffen},
  abstract = {Although the Amalthea meta-model has emerged in the past years to an industrially adopted exchange format for (also safety-critical) embedded software architectures, model checking has been seldom applied to Amalthea models so far. This work presents a simple and extensible translation approach from Amalthea to Promela models for analysis with the widely used Spin model checker. This is a first step towards applying standard state-of-the-art model checkers to Amalthea.},
  langid = {english},
  file = {C:\Users\Henni\Zotero\storage\PQ4XDS7M\Becker - Model Checking Amalthea with Spin.pdf}
}

@inproceedings{beckerSynthesizingJoblevelDependencies2016,
  title = {Synthesizing Job-Level Dependencies for Automotive Multi-Rate Effect Chains},
  booktitle = {2016 {{IEEE}} 22nd {{International Conference}} on {{Embedded}} and {{Real-Time Computing Systems}} and {{Applications}} ({{RTCSA}})},
  author = {Becker, Matthias and Dasari, Dakshina and Mubeen, Saad and Behnam, Moris and Nolte, Thomas},
  year = {2016},
  pages = {159--169},
  publisher = {IEEE},
  isbn = {1-5090-2479-4},
  file = {C:\Users\Henni\Zotero\storage\6AXN97NX\Becker et al. - 2016 - Synthesizing job-level dependencies for automotive multi-rate effect chains.pdf}
}

@inproceedings{biniBiasingEffectsSchedulability2004,
  title = {Biasing Effects in Schedulability Measures},
  booktitle = {Proceedings. 16th {{Euromicro Conference}} on {{Real-Time Systems}}, 2004. {{ECRTS}} 2004.},
  author = {Bini, E. and Buttazzo, G.C.},
  year = {2004},
  pages = {196--203},
  publisher = {IEEE},
  address = {Catania, Italy},
  doi = {10.1109/EMRTS.2004.1311021},
  urldate = {2024-11-07},
  abstract = {The performance of a schedulabilty test is typically evaluated by generating a huge number of synthetic task sets and then computing the fraction of those that pass the test with respect to the total number of feasible ones. The resulting ratio, however, depends on the metrics used for evaluating the performance and on the method for generating random task parameters. In particular, an important factor that affects the overall result of the simulation is the probability density function of the random variables used to generate the task set parameters.},
  isbn = {978-0-7695-2176-3},
  langid = {english},
  file = {C:\Users\Henni\Zotero\storage\RYHIK3FD\Bini und Buttazzo - 2004 - Biasing effects in schedulability measures.pdf}
}

@article{biniMeasuringPerformanceSchedulability2005,
  title = {Measuring the {{Performance}} of {{Schedulability Tests}}},
  author = {Bini, Enrico and Buttazzo, Giorgio C.},
  year = {2005},
  month = may,
  journal = {Real-Time Systems},
  volume = {30},
  number = {1-2},
  pages = {129--154},
  issn = {0922-6443, 1573-1383},
  doi = {10.1007/s11241-005-0507-9},
  urldate = {2024-11-07},
  abstract = {The high computational complexity required for performing an exact schedulability analysis of fixed priority systems has led the research community to investigate new feasibility tests which are less complex than exact tests, but still provide a reasonable performance in terms of acceptance ratio. The performance of a test is typically evaluated by generating a huge number of synthetic task sets and then computing the fraction of those that pass the test with respect to the total number of feasible ones. The resulting ratio, however, depends on the metrics used for evaluating the performance and on the method for generating random task parameters. In particular, an important factor that affects the overall result of the simulation is the probability density function of the random variables used to generate the task set parameters.},
  copyright = {http://www.springer.com/tdm},
  langid = {english},
  file = {C:\Users\Henni\Zotero\storage\V32QGU9N\Bini und Buttazzo - 2005 - Measuring the Performance of Schedulability Tests.pdf}
}

@inproceedings{biondiHardConstantBandwidth2014,
  title = {Hard {{Constant Bandwidth Server}}: {{Comprehensive}} Formulation and Critical Scenarios},
  shorttitle = {Hard {{Constant Bandwidth Server}}},
  booktitle = {Proceedings of the 9th {{IEEE International Symposium}} on {{Industrial Embedded Systems}} ({{SIES}} 2014)},
  author = {Biondi, Alessandro and Melani, Alessandra and Bertogna, Marko},
  year = {2014},
  month = jun,
  pages = {29--37},
  publisher = {IEEE},
  address = {Pisa},
  doi = {10.1109/SIES.2014.6871182},
  urldate = {2024-11-16},
  isbn = {978-1-4799-4023-3},
  file = {C:\Users\Henni\Zotero\storage\KF7VMHTF\Biondi et al. - 2014 - Hard Constant Bandwidth Server Comprehensive formulation and critical scenarios.pdf}
}

@article{boldtWorstCaseReaction2008,
  title = {Worst {{Case Reaction Time Analysis}} of {{Concurrent Reactive Programs}}},
  author = {Boldt, Marian and Traulsen, Claus and Von Hanxleden, Reinhard},
  year = {2008},
  month = jun,
  journal = {Electronic Notes in Theoretical Computer Science},
  volume = {203},
  number = {4},
  pages = {65--79},
  issn = {15710661},
  doi = {10.1016/j.entcs.2008.05.011},
  urldate = {2024-11-07},
  abstract = {Reactive programs have to react continuously to their inputs. Here the time needed to react with the according output is important. While the synchrony hypothesis takes the view that the program is infinitely fast, real computations take time. Similar to the traditional Worst Case Execution Time (WCET), the Worst Case Reaction Time (WCRT) of a program determines the maximal time for one reaction.},
  copyright = {https://www.elsevier.com/tdm/userlicense/1.0/},
  langid = {english},
  file = {C:\Users\Henni\Zotero\storage\JABY3GRR\Boldt et al. - 2008 - Worst Case Reaction Time Analysis of Concurrent Reactive Programs.pdf}
}

@inproceedings{bozhkoMonteCarloResponseTime2021,
  title = {Monte {{Carlo Response-Time Analysis}}},
  booktitle = {2021 {{IEEE Real-Time Systems Symposium}} ({{RTSS}})},
  author = {Bozhko, Sergey and Von Der Bruggen, Georg and Brandenburg, Bjorn B.},
  year = {2021},
  month = dec,
  pages = {342--355},
  publisher = {IEEE},
  address = {Dortmund, DE},
  doi = {10.1109/RTSS52674.2021.00039},
  urldate = {2025-01-19},
  copyright = {https://doi.org/10.15223/policy-029},
  isbn = {978-1-6654-2802-6},
  file = {C:\Users\Henni\Zotero\storage\GYIXUK65\Bozhko et al. - 2021 - Monte Carlo Response-Time Analysis.pdf}
}

@article{brandnerPreciseEfficientContextsensitive2022,
  title = {Precise, Efficient, and Context-Sensitive Cache Analysis},
  author = {Brandner, Florian and No{\^u}s, Camille},
  year = {2022},
  month = mar,
  journal = {Real-Time Systems},
  volume = {58},
  number = {1},
  pages = {36--84},
  issn = {0922-6443, 1573-1383},
  doi = {10.1007/s11241-021-09372-5},
  urldate = {2025-02-16},
  langid = {english},
  keywords = {cache,memory},
  file = {C:\Users\Henni\Zotero\storage\842KMIJR\Brandner und Noûs - 2022 - Precise, efficient, and context-sensitive cache analysis.pdf}
}

@article{brilWorstcaseResponseTime2009,
  title = {Worst-Case Response Time Analysis of Real-Time Tasks under Fixed-Priority Scheduling with Deferred Preemption},
  author = {Bril, Reinder J. and Lukkien, Johan J. and Verhaegh, Wim F. J.},
  year = {2009},
  month = aug,
  journal = {Real-Time Systems},
  volume = {42},
  number = {1-3},
  pages = {63--119},
  issn = {0922-6443, 1573-1383},
  doi = {10.1007/s11241-009-9071-z},
  urldate = {2025-02-13},
  langid = {english},
  file = {C:\Users\Henni\Zotero\storage\JLLEJ4RT\Bril et al. - 2009 - Worst-case response time analysis of real-time tasks under fixed-priority scheduling with deferred p.pdf}
}

@book{buEmbeddedSoftwareSystems2005,
  title = {Embedded {{Software}} and {{Systems}} (Vol. \# 3605): {{First International Conference}}, {{ICESS}} 2004, {{Hangzhou}}, {{China}}, {{December}} 9-10, 2004, {{Revised Selected Papers}}},
  shorttitle = {Embedded {{Software}} and {{Systems}} (Vol. \# 3605)},
  editor = {Bu, Jiajun and Chen, Chun and Guo, Minyi and Wu, Zhaohui},
  year = {2005},
  series = {Lecture {{Notes}} in {{Computer Science}}},
  number = {3605},
  publisher = {Springer Berlin Heidelberg},
  address = {Berlin, Heidelberg},
  doi = {10.1007/11535409},
  isbn = {978-3-540-28128-3 978-3-540-31823-1},
  langid = {english},
  file = {C\:\\Users\\Henni\\Zotero\\storage\\5BFR4EC9\\11535409.pdf;C\:\\Users\\Henni\\Zotero\\storage\\AUPGZAUI\\Bu et al. - 2005 - Embedded Software and Systems (vol. # 3605) First International Conference, ICESS 2004, Hangzhou, C.pdf}
}

@book{buttazzoHardRealTimeComputing2024,
  title = {Hard {{Real-Time Computing Systems}}: {{Predictable Scheduling Algorithms}} and {{Applications}}},
  shorttitle = {Hard {{Real-Time Computing Systems}}},
  author = {Buttazzo, Giorgio},
  year = {2024},
  publisher = {Springer Nature Switzerland},
  address = {Cham},
  doi = {10.1007/978-3-031-45410-3},
  urldate = {2025-02-22},
  copyright = {https://www.springernature.com/gp/researchers/text-and-data-mining},
  isbn = {978-3-031-45409-7 978-3-031-45410-3},
  langid = {english},
  file = {C:\Users\Henni\Zotero\storage\7Y8PQY2D\Buttazzo - 2024 - Hard Real-Time Computing Systems Predictable Scheduling Algorithms and Applications.pdf}
}

@article{carpenterCategorizationRealtimeMultiprocessor,
  title = {A {{Categorization}} of {{Real-time Multiprocessor Scheduling Problems}} and {{Algorithms}}},
  author = {Carpenter, John and Funk, Shelby and Holman, Philip and Srinivasan, Anand and Anderson, James and Baruah, Sanjoy},
  langid = {english},
  file = {C:\Users\Henni\Zotero\storage\JBKYSHQ4\Carpenter et al. - A Categorization of Real-time Multiprocessor Scheduling Problems and Algorithms.pdf}
}

@book{chakrabortyAdvancesRealTimeSystems2012,
  title = {Advances in {{Real-Time Systems}}},
  editor = {Chakraborty, Samarjit and Ebersp{\"a}cher, J{\"o}rg},
  year = {2012},
  publisher = {Springer Berlin Heidelberg},
  address = {Berlin, Heidelberg},
  doi = {10.1007/978-3-642-24349-3},
  urldate = {2025-02-26},
  copyright = {https://www.springernature.com/gp/researchers/text-and-data-mining},
  isbn = {978-3-642-24348-6 978-3-642-24349-3},
  langid = {english},
  keywords = {BET,LET,ZET},
  file = {C:\Users\Henni\Zotero\storage\E7CK4PJK\Chakraborty und Eberspächer - 2012 - Advances in Real-Time Systems.pdf}
}

@misc{Chen,
  title = {Chen},
  author = {, Chen},
  file = {C\:\\Users\\Henni\\Zotero\\storage\\2M97X9QH\\10-k2u.pdf;C\:\\Users\\Henni\\Zotero\\storage\\5LJJQGZM\\07-Resource.pdf;C\:\\Users\\Henni\\Zotero\\storage\\7BXSQTBJ\\_A-EDFvsRM.pdf;C\:\\Users\\Henni\\Zotero\\storage\\7XMVASNZ\\03-Aperiodic.pdf;C\:\\Users\\Henni\\Zotero\\storage\\AWU3S72I\\merged.pdf;C\:\\Users\\Henni\\Zotero\\storage\\BZRITAI4\\17-Global.pdf;C\:\\Users\\Henni\\Zotero\\storage\\FLUFCL79\\15-RTC.pdf;C\:\\Users\\Henni\\Zotero\\storage\\HH8W36TG\\13-Communication.pdf;C\:\\Users\\Henni\\Zotero\\storage\\HWQ6F2T6\\20-Multicore.pdf;C\:\\Users\\Henni\\Zotero\\storage\\IJPLL7YQ\\basics_mathematics.pdf;C\:\\Users\\Henni\\Zotero\\storage\\JBXMZL7V\\A-CriticalInstant.pdf;C\:\\Users\\Henni\\Zotero\\storage\\KR2H4CKD\\02-Schedulability.pdf;C\:\\Users\\Henni\\Zotero\\storage\\KZ8A52ZY\\formal-proof.pdf;C\:\\Users\\Henni\\Zotero\\storage\\NZWS8XST\\00-Introduction.pdf;C\:\\Users\\Henni\\Zotero\\storage\\PUSMR2AY\\08-Servers.pdf;C\:\\Users\\Henni\\Zotero\\storage\\Q6E23UAV\\04-WCET.pdf;C\:\\Users\\Henni\\Zotero\\storage\\R4WAUYM3\\17-Semi.pdf;C\:\\Users\\Henni\\Zotero\\storage\\R9SN9294\\11-Resource-Augmentation.pdf;C\:\\Users\\Henni\\Zotero\\storage\\VFTBDN2A\\06-Non-Preemptive-Scheduling.pdf;C\:\\Users\\Henni\\Zotero\\storage\\WG9PKTCR\\16-Partition.pdf;C\:\\Users\\Henni\\Zotero\\storage\\WT6YRNU6\\09-suspension.pdf;C\:\\Users\\Henni\\Zotero\\storage\\XCUU4HL8\\01-Model.pdf}
}

@article{chenFundamentalsRealTimeSystems,
  title = {Fundamentals of {{Real-Time Systems}}},
  author = {Chen, Jian-Jia},
  langid = {english},
  file = {C:\Users\Henni\Zotero\storage\2EWZKHEY\Chen - Fundamentals of Real-Time Systems.pdf}
}

@inproceedings{choiChainBasedFixedPriorityScheduling2020,
  title = {Chain-{{Based Fixed-Priority Scheduling}} of {{Loosely-Dependent Tasks}}},
  booktitle = {2020 {{IEEE}} 38th {{International Conference}} on {{Computer Design}} ({{ICCD}})},
  author = {Choi, Hyunjong and Karimi, Mohsen and Kim, Hyoseung},
  year = {2020},
  month = oct,
  pages = {631--639},
  publisher = {IEEE},
  address = {Hartford, CT, USA},
  doi = {10.1109/ICCD50377.2020.00109},
  urldate = {2025-02-26},
  copyright = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/IEEE.html},
  isbn = {978-1-7281-9710-4},
  file = {C:\Users\Henni\Zotero\storage\ZE6ZP9PR\Choi et al. - 2020 - Chain-Based Fixed-Priority Scheduling of Loosely-Dependent Tasks.pdf}
}

@inproceedings{cousotAbstractInterpretationUnified1977,
  title = {Abstract Interpretation: A Unified Lattice Model for Static Analysis of Programs by Construction or Approximation of Fixpoints},
  shorttitle = {Abstract Interpretation},
  booktitle = {Proceedings of the 4th {{ACM SIGACT-SIGPLAN}} Symposium on {{Principles}} of Programming Languages  - {{POPL}} '77},
  author = {Cousot, Patrick and Cousot, Radhia},
  year = {1977},
  pages = {238--252},
  publisher = {ACM Press},
  address = {Los Angeles, California},
  doi = {10.1145/512950.512973},
  urldate = {2025-02-15},
  langid = {english},
  file = {C:\Users\Henni\Zotero\storage\QDXU5FNV\Cousot und Cousot - 1977 - Abstract interpretation a unified lattice model for static analysis of programs by construction or.pdf}
}

@article{dar-tzenpengAssignmentSchedulingCommunicating1997,
  title = {Assignment and Scheduling Communicating Periodic Tasks in Distributed Real-Time Systems},
  author = {{Dar-Tzen Peng} and Shin, K.G. and Abdelzaher, T.F.},
  year = {1997},
  month = dec,
  journal = {IEEE Transactions on Software Engineering},
  volume = {23},
  number = {12},
  pages = {745--758},
  issn = {00985589},
  doi = {10.1109/32.637388},
  urldate = {2024-11-07},
  abstract = {We present an optimal solution to the problem of allocating communicating periodic tasks to heterogeneous processing nodes (PNs) in a distributed real-time system. The solution is optimal in the sense of minimizing the maximum normalized task response time, called the systemhazard, subject to the precedence constraints resulting from intercommunication among the tasks to be allocated. Minimization of the system hazard ensures that the solution algorithm will allocate tasks so as to meet all task deadlines under an optimal schedule, whenever such an allocation exists. The task system is modeled with a task graph (TG), in which computation and communication modules, communication delays, and intertask precedence constraints are clearly described. Tasks described by this TG are assigned to PNs by using a branch-and-bound (B\&B) search algorithm. The algorithm traverses a search tree whose leavescorrespond to potential solutions to the task allocation problem. We use a bounding method that prunes, in polynomial time, nonleaf vertices that cannot lead to an optimal solution, while ensuring that the search path leading to an optimal solution will never be pruned. For each generated leaf vertex we compute the exact cost using the algorithm developed in [1]. The lowest-cost leaf vertex (one with the least system hazard) represents an optimal task allocation. Computational experiences and examples are provided to demonstrate the concept, utility, and power of the proposed approach.},
  copyright = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/IEEE.html},
  langid = {english},
  keywords = {harmonic,RMS,task graph,tree},
  file = {C:\Users\Henni\Zotero\storage\EA6TAXC8\Dar-Tzen Peng et al. - 1997 - Assignment and scheduling communicating periodic tasks in distributed real-time systems.pdf}
}

@article{davisSurveyHardRealtime2011,
  title = {A Survey of Hard Real-Time Scheduling for Multiprocessor Systems},
  author = {Davis, Robert I. and Burns, Alan},
  year = {2011},
  month = oct,
  journal = {ACM Computing Surveys},
  volume = {43},
  number = {4},
  pages = {1--44},
  issn = {0360-0300, 1557-7341},
  doi = {10.1145/1978802.1978814},
  urldate = {2025-02-22},
  abstract = {This survey covers hard real-time scheduling algorithms and schedulability analysis techniques for homogeneous multiprocessor systems. It reviews the key results in this field from its origins in the late 1960s to the latest research published in late 2009. The survey outlines fundamental results about multiprocessor real-time scheduling that hold independent of the scheduling algorithms employed. It provides a taxonomy of the different scheduling methods, and considers the various performance metrics that can be used for comparison purposes. A detailed review is provided covering partitioned, global, and hybrid scheduling algorithms, approaches to resource sharing, and the latest results from empirical investigations. The survey identifies open issues, key research challenges, and likely productive research directions.},
  langid = {english},
  file = {C:\Users\Henni\Zotero\storage\CDI6JHEL\Davis und Burns - 2011 - A survey of hard real-time scheduling for multiprocessor systems.pdf}
}

@article{davisSurveyProbabilisticTiming2019,
  title = {A {{Survey}} of {{Probabilistic Timing Analysis Techniques}} for {{Real-Time Systems}}},
  author = {Davis, Robert I. and {Cucu-Grosjean}, Liliana},
  year = {2019},
  journal = {Leibniz Transactions on Embedded Systems (LITES)},
  volume = {6},
  number = {1},
  pages = {03:1-03:60},
  publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik},
  issn = {2199-2002},
  doi = {10.4230/LITES-V006-I001-A003},
  urldate = {2025-03-02},
  abstract = {This survey covers probabilistic timing analysis techniques for real-time systems. It reviews and critiques the key results in the field from its origins in 2000 to the latest research published up to the end of August 2018. The survey provides a taxonomy of the different methods used, and a classification of existing research. A detailed review is provided covering the main subject areas: static probabilistic timing analysis, measurement-based probabilistic timing analysis, and hybrid methods. In addition, research on supporting mechanisms and techniques, case studies, and evaluations is also reviewed. The survey concludes by identifying open issues, key challenges and possible directions for future research.},
  copyright = {Creative Commons Attribution 3.0 Germany license, info:eu-repo/semantics/openAccess},
  langid = {english},
  keywords = {Computer systems organization  Real-time systems,Probabilistic,real-time,timing analysis}
}

@article{davisSurveyProbabilisticTiming2019a,
  title = {A {{Survey}} of {{Probabilistic Timing Analysis Techniques}} for {{Real-Time Systems}}},
  author = {Davis, Robert I. and {Cucu-Grosjean}, Liliana},
  year = {2019},
  journal = {Leibniz Transactions on Embedded Systems (LITES)},
  volume = {6},
  number = {1},
  pages = {03:1-03:60},
  publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik},
  issn = {2199-2002},
  doi = {10.4230/LITES-V006-I001-A003},
  urldate = {2025-03-02},
  abstract = {This survey covers probabilistic timing analysis techniques for real-time systems. It reviews and critiques the key results in the field from its origins in 2000 to the latest research published up to the end of August 2018. The survey provides a taxonomy of the different methods used, and a classification of existing research. A detailed review is provided covering the main subject areas: static probabilistic timing analysis, measurement-based probabilistic timing analysis, and hybrid methods. In addition, research on supporting mechanisms and techniques, case studies, and evaluations is also reviewed. The survey concludes by identifying open issues, key challenges and possible directions for future research.},
  copyright = {Creative Commons Attribution 3.0 Germany license, info:eu-repo/semantics/openAccess},
  langid = {english},
  keywords = {Computer systems organization  Real-time systems,Probabilistic,real-time,timing analysis}
}

@article{davisSurveyProbabilisticTiming2019b,
  title = {A {{Survey}} of {{Probabilistic Timing Analysis Techniques}} for {{Real-Time Systems}}},
  author = {Davis, Robert I. and {Cucu-Grosjean}, Liliana},
  year = {2019},
  journal = {Leibniz Transactions on Embedded Systems (LITES)},
  volume = {6},
  number = {1},
  pages = {03:1-03:60},
  publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik},
  issn = {2199-2002},
  doi = {10.4230/LITES-V006-I001-A003},
  urldate = {2025-03-02},
  abstract = {This survey covers probabilistic timing analysis techniques for real-time systems. It reviews and critiques the key results in the field from its origins in 2000 to the latest research published up to the end of August 2018. The survey provides a taxonomy of the different methods used, and a classification of existing research. A detailed review is provided covering the main subject areas: static probabilistic timing analysis, measurement-based probabilistic timing analysis, and hybrid methods. In addition, research on supporting mechanisms and techniques, case studies, and evaluations is also reviewed. The survey concludes by identifying open issues, key challenges and possible directions for future research.},
  copyright = {Creative Commons Attribution 3.0 Germany license, info:eu-repo/semantics/openAccess},
  langid = {english},
  keywords = {Computer systems organization  Real-time systems,Probabilistic,real-time,timing analysis},
  file = {C:\Users\Henni\Zotero\storage\IKTD5T75\Davis und Cucu-Grosjean - 2019 - A Survey of Probabilistic Timing Analysis Techniques for Real-Time Systems.pdf}
}

@book{debakkerAutomataLanguagesProgramming1980,
  title = {Automata, {{Languages}} and {{Programming}}: {{Seventh Colloquium Noordwijkerhout}}, the {{Netherlands July}} 14--18, 1980},
  shorttitle = {Automata, {{Languages}} and {{Programming}}},
  editor = {De Bakker, Jaco and Van Leeuwen, Jan and Goos, G. and Hartmanis, J. and Brauer, W. and Brinch Hansen, P. and Gries, D. and Moler, C. and Seegm{\"u}ller, G. and Stoer, J. and Wirth, N.},
  year = {1980},
  series = {Lecture {{Notes}} in {{Computer Science}}},
  volume = {85},
  publisher = {Springer Berlin Heidelberg},
  address = {Berlin, Heidelberg},
  doi = {10.1007/3-540-10003-2},
  urldate = {2025-02-15},
  copyright = {http://www.springer.com/tdm},
  isbn = {978-3-540-10003-4 978-3-540-39346-7},
  langid = {english}
}

@article{debockTasksetGeneratorSchedulability2018,
  title = {Task-Set Generator for Schedulability Analysis Using the {{TACLebench}} Benchmark Suite},
  author = {De Bock, Yorick and Altmeyer, Sebastian and Huybrechts, Thomas and Broeckhove, Jan and Hellinckx, Peter},
  year = {2018},
  month = mar,
  journal = {ACM SIGBED Review},
  volume = {15},
  number = {1},
  pages = {22--28},
  issn = {1551-3688},
  doi = {10.1145/3199610.3199613},
  urldate = {2024-11-07},
  abstract = {Currently, real-time embedded systems evolve towards complex systems using new state of the art technologies such as multi-core processors and virtualization techniques. Both technologies require new real-time scheduling algorithms. For uniprocessor scheduling, utilization-based evaluation methodologies are well-established. For multi-core systems and virtualization, evaluating and comparing scheduling techniques using the tasks' parameters is more realistic. Evaluating such scheduling techniques requires relevant and standardised task sets. Scheduling algorithms can be evaluated at three levels: 1) using a mathematical model of the algorithm, 2) simulating the algorithm and 3) implementing the algorithm on the target platform. Generating task sets is straightforward in the case of the first two levels; only the parameters of the tasks are required. Evaluating and comparing scheduling algorithms on the target platform itself, however, requires executable tasks matching the predefined standardised task sets. Generating those executable tasks is not standardized yet.},
  langid = {english},
  file = {C:\Users\Henni\Zotero\storage\FKJ5QJ52\De Bock et al. - 2018 - Task-set generator for schedulability analysis using the TACLebench benchmark suite.pdf}
}

@inproceedings{dengSchedulingRealtimeApplications1997,
  title = {Scheduling Real-Time Applications in an Open Environment},
  booktitle = {Proceedings {{Real-Time Systems Symposium}}},
  author = {Deng, Z. and Liu, J.W.-S.},
  year = {1997},
  pages = {308--319},
  publisher = {IEEE Comput. Soc},
  address = {San Francisco, CA, USA},
  doi = {10.1109/REAL.1997.641292},
  urldate = {2025-02-13},
  isbn = {978-0-8186-8268-1},
  file = {C:\Users\Henni\Zotero\storage\C4FDB2VL\Deng und Liu - 1997 - Scheduling real-time applications in an open environment.pdf}
}

@article{dietrichSysWCETWholeSystemResponseTime,
  title = {{{SysWCET}}: {{Whole-System Response-Time Analysis}} for {{Fixed-Priority Real-Time Systems}}},
  author = {Dietrich, Christian and Wagemann, Peter and Ulbrich, Peter and Lohmann, Daniel},
  abstract = {The worst-case response time (WCRT) -- the time span from release to completion of a real-time task -- is a crucial property of real-time systems. However, WCRT analysis is complex in practice, as it depends not only on the realistic examination of worst-case execution times (WCET), but also on system-level overheads and blocking/preemption times. While the implicit path enumeration technique (IPET) has greatly improved automated WCET analysis, the resulting values still need to be aggregated manually with the system-level overheads -- an errorprone and tedious process that yields overly pessimistic results. With SysWCET, we provide an integrated approach for the automated WCRT analysis across multiple threads of execution, locks, interrupt service routines, and the real-time operating system (RTOS) in particular. Our approach spans a single IPET formulation over the whole system and exploits RTOS and scheduler semantics to derive cross-kernel flow facts in order to significantly reduce pessimism in the WCRT analysis.},
  langid = {english},
  file = {C:\Users\Henni\Zotero\storage\LHICPUD4\Dietrich et al. - SysWCET Whole-System Response-Time Analysis for Fixed-Priority Real-Time Systems.pdf}
}

@inproceedings{eichlerGENEEBenchmarkGenerator2019,
  title = {{{GENEE}}: A Benchmark Generator for Static Analysis Tools of Energy-Constrained Cyber-Physical Systems},
  shorttitle = {{{GENEE}}},
  booktitle = {Proceedings of the 2nd {{Workshop}} on {{Benchmarking Cyber-Physical Systems}} and {{Internet}} of {{Things}}},
  author = {Eichler, Christian and W{\"a}gemann, Peter and {Schr{\"o}der-Preikschat}, Wolfgang},
  year = {2019},
  month = apr,
  pages = {1--6},
  publisher = {ACM},
  address = {Montreal Quebec Canada},
  doi = {10.1145/3312480.3313170},
  urldate = {2024-11-07},
  abstract = {To guarantee the safe completion of a specific task in an energyconstrained (i.e., battery-operated, energy-harvesting) cyber-physical system (CPS), information on the task's worst-case energy consumption (WCEC) is necessary. To determine upper bounds on the WCEC, analysis tools conducting static program-code analysis make sound but conservative assumptions on the program's dynamic behavior. When using existing source-code benchmarks, knowledge of their possible program paths and thus their dynamic behaviors are not available. This lack of knowledge leads to missing baselines, which prevents comprehensive evaluations of the accuracy of WCEC analyzers, that is, the difference between the actual WCEC and analyzer's reported upper bound is unknown.},
  isbn = {978-1-4503-6693-9},
  langid = {english},
  file = {C:\Users\Henni\Zotero\storage\LZG6YNLK\Eichler et al. - 2019 - G EN EE a benchmark generator for static analysis too.pdf}
}

@article{eichlerTASKersWholeSystemGenerator2018,
  title = {{{TASKers}}: {{A Whole-System Generator}} for {{Benchmarking Real-Time-System Analyses}}},
  shorttitle = {{{TASKers}}},
  author = {Eichler, Christian and Distler, Tobias and Ulbrich, Peter and W{\"a}gemann, Peter and {Schr{\"o}der-Preikschat}, Wolfgang},
  year = {2018},
  journal = {OASIcs, Volume 63, WCET 2018},
  volume = {63},
  pages = {6:1-6:12},
  publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik},
  issn = {2190-6807},
  doi = {10.4230/OASICS.WCET.2018.6},
  urldate = {2024-11-07},
  abstract = {Implementation-based benchmarking of timing and schedulability analyses requires system code that can be executed on real hardware and has defined properties, for example, known worst-case execution times (WCETs) of tasks. Traditional approaches for creating benchmarks with such characteristics often result in implementations that do not resemble real-world systems, either due to work only being simulated by means of busy waiting, or because tasks have no controlflow dependencies between each other. In this paper, we address this problem with TASKers, a generator that constructs realistic benchmark systems with predefined properties. To achieve this, TASKers composes patterns of real-world programs to generate tasks that produce known outputs and exhibit preconfigured WCETs when being executed with certain inputs. Using this knowledge during the generation process, TASKers is able to specifically introduce inter-task control-flow dependencies by mapping the output of one task to the input of another.},
  collaborator = {Brandner, Florian},
  copyright = {Creative Commons Attribution 3.0 Unported license, info:eu-repo/semantics/openAccess},
  isbn = {9783959770736},
  langid = {english},
  keywords = {benchmarking real-time-system analyses,static timing analysis,task-set generation,WCET analysis,whole-system generation},
  file = {C:\Users\Henni\Zotero\storage\HG7AG23B\Eichler et al. - 2018 - TASKers A Whole-System Generator for Benchmarking Real-Time-System Analyses.pdf}
}

@inproceedings{eisenbrandStaticPriorityRealTimeScheduling2008,
  title = {Static-{{Priority Real-Time Scheduling}}: {{Response Time Computation Is NP-Hard}}},
  shorttitle = {Static-{{Priority Real-Time Scheduling}}},
  booktitle = {2008 {{Real-Time Systems Symposium}}},
  author = {Eisenbrand, Friedrich and Rothvo{\ss}, Thomas},
  year = {2008},
  month = nov,
  pages = {397--406},
  publisher = {IEEE},
  address = {Barcelona, Spain},
  doi = {10.1109/RTSS.2008.25},
  urldate = {2025-02-10},
  isbn = {978-0-7695-3477-0},
  file = {C\:\\Users\\Henni\\Zotero\\storage\\H7LHTDGE\\Eisenbrand und Rothvoß - 2008 - Static-Priority Real-Time Scheduling Response Time Computation Is NP-Hard.pdf;C\:\\Users\\Henni\\Zotero\\storage\\WJN5ZBAM\\Static-Priority_Real-Time_Scheduling_Response_Time_Computation_Is_NP-Hard.pdf}
}

@article{embersonTechniquesSynthesisMultiprocessor,
  title = {Techniques {{For The Synthesis Of Multiprocessor Tasksets}}},
  author = {Emberson, Paul and Stafford, Roger and Davis, Robert I},
  abstract = {The selection of task attributes for empirical evaluations of multiprocessor scheduling algorithms and associated schedulability analyses can greatly affect the results of experiments. Taskset generation algorithms should meet three requirements: efficiency, parameter independence, and lack of bias. Satisfying these requirements enables tasksets to be generated in a moderate amount of time, allows effects of specific parameters to be explored without the problem of confounding variables, and ensures fairness in comparisons between different schedulability analysis techniques. For the uniprocessor case, they are met by the UUniFast algorithm but for multiprocessor systems, where the total desired utilisation is greater than one, UUniFast can produce invalid tasksets. This paper outlines an algorithm, Randfixedsum, for the underlying mathematical problem of efficiently generating uniformly distributed random points whose components have constant sum. This algorithm has been available via a MatLab forum for a number of years; however, this is the first time it has been formally published. This algorithm has direct application to multiprocessor taskset generation. The importance of period generation to experimental evaluation of schedulability tests is also covered.},
  langid = {english},
  file = {C:\Users\Henni\Zotero\storage\MCA7K8LA\Emberson et al. - Techniques For The Synthesis Of Multiprocessor Tasksets.pdf}
}

@article{ernstLogicalExecutionTime2018,
  title = {The Logical Execution Time Paradigm: {{New}} Perspectives for Multicore Systems (Dagstuhl Seminar 18092)},
  author = {Ernst, Rolf and Kuntz, Stefan and Quinton, Sophie and Simons, Martin},
  year = {2018},
  journal = {Dagstuhl Reports},
  volume = {8},
  number = {2},
  pages = {122--149},
  publisher = {Schloss Dagstuhl--Leibniz-Zentrum f{\"u}r Informatik},
  issn = {2192-5283},
  file = {C:\Users\Henni\Zotero\storage\YVY33Z5F\Ernst et al. - 2018 - The logical execution time paradigm New perspectives for multicore systems (dagstuhl seminar 18092).pdf}
}

@article{falkTACLeBenchBenchmarkCollection2016,
  title = {{{TACLeBench}}: {{A Benchmark Collection}} to {{Support Worst-Case Execution Time Research}}},
  shorttitle = {{{TACLeBench}}},
  author = {Falk, Heiko and Altmeyer, Sebastian and Hellinckx, Peter and Lisper, Bj{\"o}rn and Puffitsch, Wolfgang and Rochange, Christine and Schoeberl, Martin and S{\o}rensen, Rasmus Bo and W{\"a}gemann, Peter and Wegener, Simon},
  year = {2016},
  journal = {OASIcs, Volume 55, WCET 2016},
  volume = {55},
  pages = {2:1-2:10},
  publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik},
  issn = {2190-6807},
  doi = {10.4230/OASICS.WCET.2016.2},
  urldate = {2024-11-07},
  abstract = {Engineering related research, such as research on worst-case execution time, uses experimentation to evaluate ideas. For these experiments we need example programs. Furthermore, to make the research experimentation repeatable those programs shall be made publicly available.},
  collaborator = {Schoeberl, Martin},
  copyright = {Creative Commons Attribution 3.0 Unported license, info:eu-repo/semantics/openAccess},
  isbn = {9783959770255},
  langid = {english},
  keywords = {Benchmark,real-time systems,WCET analysis},
  file = {C:\Users\Henni\Zotero\storage\M3PMXQ22\Falk et al. - 2016 - TACLeBench A Benchmark Collection to Support Worst-Case Execution Time Research.pdf}
}

@article{gemlauSystemlevelLogicalExecution2021,
  title = {System-Level {{Logical Execution Time}}: {{Augmenting}} the {{Logical Execution Time Paradigm}} for {{Distributed Real-time Automotive Software}}},
  shorttitle = {System-Level {{Logical Execution Time}}},
  author = {Gemlau, Kai-Bj{\"o}rn and K{\"o}hler, Leonie and Ernst, Rolf and Quinton, Sophie},
  year = {2021},
  month = apr,
  journal = {ACM Transactions on Cyber-Physical Systems},
  volume = {5},
  number = {2},
  pages = {1--27},
  issn = {2378-962X, 2378-9638},
  doi = {10.1145/3381847},
  urldate = {2024-11-10},
  abstract = {Logical Execution Time (LET) is a timed programming abstraction, which features predictable and composable timing. It has recently gained considerable attention in the automotive industry, where it was successfully applied to master the distribution of software applications on multi-core electronic control units. However, the LET abstraction in its conventional form is only valid within the scope of a single component. With the recent introduction of System-level Logical Execution Time (SL LET), the concept could be transferred to a system-wide scope. This article improves over a first paper on SL LET, by providing matured definitions and an extensive discussion of the concept. It also features a comprehensive evaluation exploring the impacts of SL LET with regard to design, verification, performance, and implementability. The evaluation goes far beyond the contexts in which LET was originally applied. Indeed, SL LET allows us to address many open challenges in the design and verification of complex embedded hardware/software systems addressing predictability, synchronization, composability, and extensibility. Furthermore, we investigate performance trade-offs, and we quantify implementation costs by providing an analysis of the additionally required buffers.},
  langid = {english},
  file = {C:\Users\Henni\Zotero\storage\GKWEY247\Gemlau et al. - 2021 - System-level Logical Execution Time Augmenting the Logical Execution Time Paradigm for Distributed.pdf}
}

@article{gustafssonMalardalenWCETBenchmarks2012,
  title = {The {{M{\"a}lardalen WCET Benchmarks}}: {{Past}}, {{Present And Future}}},
  shorttitle = {The {{M{\"a}lardalen WCET Benchmarks}}},
  author = {Gustafsson, Jan and Betts, Adam and Ermedahl, Andreas and Lisper, Bj{\"o}rn},
  year = {2012},
  journal = {OASIcs, Volume 15, WCET 2010},
  volume = {15},
  pages = {136--146},
  publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik},
  issn = {2190-6807},
  doi = {10.4230/OASICS.WCET.2010.136},
  urldate = {2025-02-22},
  abstract = {Modelling of real-time systems requires accurate and tight estimates of the Worst-Case Execution Time (WCET) of each task scheduled to run. In the past two decades, two main paradigms have emerged within the field of WCET analysis: static analysis and hybrid measurement-based analysis. These techniques have been succesfully implemented in prototype and commercial toolsets. Yet, comparison among the WCET estimates derived by such tools remains somewhat elusive as it requires a common set of benchmarks which serve a multitude of needs.  The Maelardalen WCET research group maintains a large number of WCET benchmark programs for this purpose. This paper describes properties of the existing benchmarks, including their relative strengths and weaknesses. We propose extensions to the benchmarks which will allow any type of WCET tool evaluate its results against other state-of-the-art tools, thus setting a high standard for future research and development.  We also propose an organization supporting the future work with the benchmarks. We suggest to form a committee with a responsibility for the benchmarks, and that the benchmark web site is transformed to an open wiki, with possibility for the WCET community to easily update the benchmarks.},
  collaborator = {Lisper, Bj{\"o}rn},
  copyright = {Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported license, info:eu-repo/semantics/openAccess},
  isbn = {9783939897217},
  langid = {english},
  keywords = {benchmark,WCET analysis},
  file = {C:\Users\Henni\Zotero\storage\424U9BJH\Gustafsson et al. - 2012 - The Mälardalen WCET Benchmarks Past, Present And Future.pdf}
}

@inproceedings{gustafssonToolAutomaticFlow2003,
  title = {A Tool for Automatic Flow Analysis of {{C-programs}} for {{WCET}} Calculation},
  booktitle = {Proceedings of the {{Eighth International Workshop}} on {{Object-Oriented Real-Time Dependable Systems}}, 2003. ({{WORDS}} 2003).},
  author = {Gustafsson, J. and Lisper, B. and Sandberg, C. and Bermudo, N.},
  year = {2003},
  pages = {106--112},
  publisher = {IEEE},
  address = {Guadalajara, Mexico},
  doi = {10.1109/WORDS.2003.1218072},
  urldate = {2024-11-07},
  abstract = {Bounding the Worst Case Execution Time (WCET) of programs is essential for real-time systems. To be able to do WCET calculations, the iteration bounds for loops and recursion must be known. We describe a newly developed prototype tool that calculates these bounds automatically, thereby avoiding the need for manual annotations by the programmer.},
  isbn = {978-0-7695-1929-6},
  langid = {english},
  file = {C:\Users\Henni\Zotero\storage\72UK97SI\Gustafsson et al. - 2003 - A tool for automatic flow analysis of C-programs for WCET calculation.pdf}
}

@inproceedings{hambardeSurveyRealTime2014,
  title = {The {{Survey}} of {{Real Time Operating System}}: {{RTOS}}},
  shorttitle = {The {{Survey}} of {{Real Time Operating System}}},
  booktitle = {2014 {{International Conference}} on {{Electronic Systems}}, {{Signal Processing}} and {{Computing Technologies}}},
  author = {Hambarde, Prasanna and Varma, Rachit and Jha, Shivani},
  year = {2014},
  month = jan,
  pages = {34--39},
  publisher = {IEEE},
  address = {Nagpur, India},
  doi = {10.1109/ICESC.2014.15},
  urldate = {2025-02-13},
  isbn = {978-1-4799-2102-7},
  file = {C:\Users\Henni\Zotero\storage\Y4RE8SP5\Hambarde et al. - 2014 - The Survey of Real Time Operating System RTOS.pdf}
}

@inproceedings{hanBetterPolynomialtimeSchedulability1997,
  title = {A Better Polynomial-Time Schedulability Test for Real-Time Fixed-Priority Scheduling Algorithms},
  booktitle = {Proceedings {{Real-Time Systems Symposium}}},
  author = {Han, C.-C. and Tyan, H.-Y.},
  year = {1997},
  pages = {36--45},
  publisher = {IEEE Comput. Soc},
  address = {San Francisco, CA, USA},
  doi = {10.1109/REAL.1997.641267},
  urldate = {2025-02-27},
  isbn = {978-0-8186-8268-1},
  keywords = {harmonic},
  file = {C:\Users\Henni\Zotero\storage\A5IKNJJI\Han und Tyan - 1997 - A better polynomial-time schedulability test for real-time fixed-priority scheduling algorithms.pdf}
}

@incollection{helmyOptimizingRoundRobinScheduling2024,
  title = {Optimizing {{Round-Robin Scheduling Algorithm Performance}} in {{Real-Time Systems}}},
  booktitle = {Applied {{Intelligence}} and {{Informatics}}},
  author = {Helmy, Tarek},
  editor = {Mahmud, Mufti and {Ben-Abdallah}, Hanene and Kaiser, M. Shamim and Ahmed, Muhammad Raisuddin and Zhong, Ning},
  year = {2024},
  volume = {2065},
  pages = {371--382},
  publisher = {Springer Nature Switzerland},
  address = {Cham},
  doi = {10.1007/978-3-031-68639-9_24},
  urldate = {2025-02-10},
  isbn = {978-3-031-68638-2 978-3-031-68639-9},
  langid = {english},
  file = {C:\Users\Henni\Zotero\storage\VDN6SYHT\Helmy - 2024 - Optimizing Round-Robin Scheduling Algorithm Performance in Real-Time Systems.pdf}
}

@article{henzingerGiottoTimetriggeredLanguage2003,
  title = {Giotto: A Time-Triggered Language for Embedded Programming},
  shorttitle = {Giotto},
  author = {Henzinger, T.A. and Horowitz, B. and Kirsch, C.M.},
  year = {2003},
  month = jan,
  journal = {Proceedings of the IEEE},
  volume = {91},
  number = {1},
  pages = {84--99},
  issn = {0018-9219},
  doi = {10.1109/JPROC.2002.805825},
  urldate = {2025-02-28},
  copyright = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/IEEE.html},
  langid = {english},
  file = {C:\Users\Henni\Zotero\storage\JK54M8V8\Henzinger et al. - 2003 - Giotto a time-triggered language for embedded programming.pdf}
}

@inproceedings{herbegueHardwareArchitectureSpecification2013,
  title = {Hardware Architecture Specification and Constraint-Based {{WCET}} Computation},
  booktitle = {2013 8th {{IEEE International Symposium}} on {{Industrial Embedded Systems}} ({{SIES}})},
  author = {Herbegue, Hajer and Casse, Hugues and Filali, Mamoun and Rochange, Christine},
  year = {2013},
  month = jun,
  pages = {259--268},
  publisher = {IEEE},
  address = {Porto},
  doi = {10.1109/SIES.2013.6601499},
  urldate = {2024-11-07},
  abstract = {The analysis of the worst-case execution times is necessary in the design of critical real-time systems. To get sound and precise times, the WCET analysis for these systems must be performed on binary code and based on static analysis. OTAWA, a tool providing WCET computation, uses the Sim-nML language to describe the instruction set and XML files to describe the microarchitecture. The latter information is usually inadequate to describe real architectures and, therefore, requires specific modifications, currently performed by hand, to allow correct time calculation. In this paper, we propose to extend Sim-nML in order to support the description of modern microarchitecture features along the instruction set description and to seamlessly derive the time calculation. This time computation is specified as a constraint solving problem that is automatically synthesized from the extended Sim-nML. Thanks to its declarative aspect, this approach makes easier and modular the description of complex features of microprocessors while maintaining a sound process to compute times.},
  isbn = {978-1-4799-0658-1},
  langid = {english},
  file = {C:\Users\Henni\Zotero\storage\7RRI5J69\Herbegue et al. - 2013 - Hardware architecture specification and constraint-based WCET computation.pdf}
}

@misc{IEEEStandardRealTime,
  title = {{{IEEE Standard}} for a {{Real-Time Operating System}} ({{RTOS}}) for {{Small-Scale Embedded Systems}}},
  publisher = {IEEE},
  doi = {10.1109/IEEESTD.2018.8445674},
  urldate = {2025-02-13},
  isbn = {9781504448581},
  file = {C:\Users\Henni\Zotero\storage\GHW8AGA2\IEEE Standard for a Real-Time Operating System (RTOS) for Small-Scale Embedded Systems.pdf}
}

@book{instituteofelectricalandelectronicsengineersRTAS201521st2015,
  title = {{{RTAS}} 2015: 21st {{IEEE Real Time}} and {{Embedded Technology}} and {{Applications Symposium}}: Proceedings},
  shorttitle = {{{RTAS}} 2015},
  editor = {{Institute of Electrical and Electronics Engineers}},
  year = {2015},
  publisher = {IEEE},
  address = {Piscataway, NJ},
  isbn = {978-1-4799-8603-3},
  langid = {english},
  file = {C:\Users\Henni\Zotero\storage\SU47RFG2\Institute of Electrical and Electronics Engineers - 2015 - RTAS 2015 21st IEEE Real Time and Embedded Technology and Applications Symposium proceedings.pdf}
}

@misc{itea2officeAMALTHEAProjectResults2015,
  title = {{{AMALTHEA Project}} Results Leaflet},
  author = {ITEA 2 Office},
  year = {2015},
  month = mar,
  urldate = {2025-03-02},
  file = {C:\Users\Henni\Zotero\storage\49VQM3VZ\ITEA 2 Office - 2015 - AMALTHEA Project results leaflet.pdf}
}

@misc{johan.van.der.heide[at]itea4.orgITEA4Project,
  title = {{{ITEA}} 4 {$\cdot$} {{Project}} {$\cdot$} 13017 {{AMALTHEA4public}}},
  author = {{johan.van.der.heide[at]itea4.org}, Johan van der Heide},
  journal = {itea4.org},
  urldate = {2025-03-02},
  abstract = {ITEA is the Eureka R\&D\&I Cluster programme for software innovation, enabling a large international community to collaborate in funded projects that turn innovative ideas into new businesses, jobs, economic growth and benefits for society.},
  howpublished = {https://itea4.org/project/amalthea4public.html},
  file = {C:\Users\Henni\Zotero\storage\BD228W2C\amalthea4public.html}
}

@article{kelterWCETAnalysisOptimization,
  title = {{{WCET Analysis}} and {{Optimization}} for {{Multi-Core Real-Time Systems}}},
  author = {Kelter, Timon},
  file = {C:\Users\Henni\Zotero\storage\MQAWUNTE\kelter-phd.pdf}
}

@inproceedings{kelterWCETawareSchedulingOptimizations2014,
  title = {{{WCET-aware}} Scheduling Optimizations for Multi-Core Real-Time Systems},
  booktitle = {2014 {{International Conference}} on {{Embedded Computer Systems}}: {{Architectures}}, {{Modeling}}, and {{Simulation}} ({{SAMOS XIV}})},
  author = {Kelter, Timon and Borghorst, Hendrik and Marwedel, Peter},
  year = {2014},
  month = jul,
  pages = {67--74},
  publisher = {IEEE},
  address = {Agios Konstantinos, Samos, Greece},
  doi = {10.1109/SAMOS.2014.6893196},
  urldate = {2024-11-07},
  abstract = {In real-time systems, the WCET (worst-case execution time) of tasks is of utmost importance. For multi-cores, the WCET has been shown to be hard to determine due to task interactions on shared memory and shared buses. This problem is usually addressed by spatial or temporal partitioning of the resources, but both lead to lower utilization if the partitioning is not done optimally. We examine two approaches for optimizing resource usage in a temporally partitioned multi-core system and show that these techniques can reduce the WCET by more than 30\% on average, leading to better schedulability and higher system utilization.},
  isbn = {978-1-4799-3770-7},
  langid = {english},
  file = {C:\Users\Henni\Zotero\storage\K32GT7HF\Kelter et al. - 2014 - WCET-aware scheduling optimizations for multi-core real-time systems.pdf}
}

@incollection{kirnerWCETAnalysisTool2012,
  title = {The {{WCET Analysis Tool CalcWcet167}}},
  booktitle = {Leveraging {{Applications}} of {{Formal Methods}}, {{Verification}} and {{Validation}}. {{Applications}} and {{Case Studies}}},
  author = {Kirner, Raimund},
  editor = {Hutchison, David and Kanade, Takeo and Kittler, Josef and Kleinberg, Jon M. and Mattern, Friedemann and Mitchell, John C. and Naor, Moni and Nierstrasz, Oscar and Pandu Rangan, C. and Steffen, Bernhard and Sudan, Madhu and Terzopoulos, Demetri and Tygar, Doug and Vardi, Moshe Y. and Weikum, Gerhard and Margaria, Tiziana and Steffen, Bernhard},
  year = {2012},
  volume = {7610},
  pages = {158--172},
  publisher = {Springer Berlin Heidelberg},
  address = {Berlin, Heidelberg},
  doi = {10.1007/978-3-642-34032-1_17},
  urldate = {2025-02-22},
  isbn = {978-3-642-34031-4 978-3-642-34032-1},
  file = {C:\Users\Henni\Zotero\storage\Y4E8XK2G\Kirner - 2012 - The WCET Analysis Tool CalcWcet167.pdf}
}

@article{kirschLogicalExecutionTime2012,
  title = {The Logical Execution Time Paradigm},
  author = {Kirsch, Christoph M and Sokolova, Ana},
  year = {2012},
  journal = {Advances in Real-Time Systems},
  pages = {103--120},
  publisher = {Springer},
  issn = {3642243487},
  keywords = {LET}
}

@book{kopetzRealTimeSystemsDesign2022,
  title = {Real-{{Time Systems}}: {{Design Principles}} for {{Distributed Embedded Applications}}},
  shorttitle = {Real-{{Time Systems}}},
  author = {Kopetz, Hermann and Steiner, Wilfried},
  year = {2022},
  publisher = {Springer International Publishing},
  address = {Cham},
  doi = {10.1007/978-3-031-11992-7},
  urldate = {2025-02-26},
  copyright = {https://www.springer.com/tdm},
  isbn = {978-3-031-11991-0 978-3-031-11992-7},
  langid = {english},
  keywords = {LET},
  file = {C:\Users\Henni\Zotero\storage\ISZQB2VQ\Kopetz und Steiner - 2022 - Real-Time Systems Design Principles for Distributed Embedded Applications.pdf}
}

@inproceedings{krafczykWCETOverapproximationSoftware2016,
  title = {{{WCET}} Overapproximation for Software in the Context of a {{Cyber-Physical System}}},
  booktitle = {2016 {{IFIP}}/{{IEEE International Conference}} on {{Very Large Scale Integration}} ({{VLSI-SoC}})},
  author = {Krafczyk, Niklas and Riener, Heinz and Fey, Goerschwin},
  year = {2016},
  month = sep,
  pages = {1--6},
  publisher = {IEEE},
  address = {Tallinn, Estonia},
  doi = {10.1109/VLSI-SoC.2016.7753559},
  urldate = {2024-11-07},
  abstract = {We propose an approach for overapproximating the worst-case execution time (WCET) of embedded control software using formal methods. Model checking is iteratively applied to compute the WCET from the machine code of the software considering a platform and an environment model. We implemented the approach and present first experiments for a thermal controller application executed on a LEON3 processor under different environment constraints.},
  isbn = {978-1-5090-3561-8},
  langid = {english},
  file = {C:\Users\Henni\Zotero\storage\XJPMZ4MY\Krafczyk et al. - 2016 - WCET overapproximation for software in the context of a Cyber-Physical System.pdf}
}

@inproceedings{kuoLoadAdjustmentAdaptive1991,
  title = {Load Adjustment in Adaptive Real-Time Systems},
  booktitle = {[1991] {{Proceedings Twelfth Real-Time Systems Symposium}}},
  author = {Kuo, T.-W. and Mok, A.K.},
  year = {1991},
  pages = {160--170},
  publisher = {IEEE Comput. Soc. Press},
  address = {San Antonio, TX, USA},
  doi = {10.1109/REAL.1991.160369},
  urldate = {2025-02-27},
  isbn = {978-0-8186-2450-6},
  keywords = {harmonic},
  file = {C:\Users\Henni\Zotero\storage\FRT8PGDF\Kuo und Mok - 1991 - Load adjustment in adaptive real-time systems.pdf}
}

@incollection{leeGeneralizingLogicalExecution2022,
  title = {Generalizing {{Logical Execution Time}}},
  booktitle = {Principles of {{Systems Design}}},
  author = {Lee, Edward A. and Lohstroh, Marten},
  editor = {Raskin, Jean-Fran{\c c}ois and Chatterjee, Krishnendu and Doyen, Laurent and Majumdar, Rupak},
  year = {2022},
  volume = {13660},
  pages = {160--181},
  publisher = {Springer Nature Switzerland},
  address = {Cham},
  doi = {10.1007/978-3-031-22337-2_8},
  urldate = {2025-02-28},
  isbn = {978-3-031-22336-5 978-3-031-22337-2},
  langid = {english},
  file = {C:\Users\Henni\Zotero\storage\GNC88ELR\Lee und Lohstroh - 2022 - Generalizing Logical Execution Time.pdf}
}

@inproceedings{lehoczkyPerformanceRealtimeBus1986,
  title = {Performance of Real-Time Bus Scheduling Algorithms},
  booktitle = {Proceedings of the 1986 {{ACM SIGMETRICS}} Joint International Conference on {{Computer}} Performance Modelling, Measurement and Evaluation  - {{SIGMETRICS}} '86/{{PERFORMANCE}} '86},
  author = {Lehoczky, John P. and Sha, Lui},
  year = {1986},
  pages = {44--53},
  publisher = {ACM Press},
  address = {Raleigh, North Carolina, United States},
  doi = {10.1145/317499.317538},
  urldate = {2025-02-03},
  isbn = {978-0-89791-184-9},
  langid = {english},
  file = {C:\Users\Henni\Zotero\storage\UZ3WB5VS\Lehoczky und Sha - 1986 - Performance of real-time bus scheduling algorithms.pdf}
}

@inproceedings{lehoczkyRateMonotonicScheduling1989,
  title = {The Rate Monotonic Scheduling Algorithm: Exact Characterization and Average Case Behavior},
  shorttitle = {The Rate Monotonic Scheduling Algorithm},
  booktitle = {[1989] {{Proceedings}}. {{Real-Time Systems Symposium}}},
  author = {Lehoczky, J. and Sha, L. and Ding, Y.},
  year = {1989},
  pages = {166--171},
  publisher = {IEEE Comput. Soc. Press},
  address = {Santa Monica, CA, USA},
  doi = {10.1109/REAL.1989.63567},
  urldate = {2025-01-19},
  isbn = {978-0-8186-2004-1},
  file = {G:\Meine Ablage\Masterarbeit\Quellen\The_rate_monotonic_scheduling_algorithm_exact_characterization_and_average_case_behavior.pdf}
}

@inproceedings{liCacheModelingRealtime1996,
  title = {Cache Modeling for Real-Time Software: Beyond Direct Mapped Instruction Caches},
  shorttitle = {Cache Modeling for Real-Time Software},
  booktitle = {17th {{IEEE Real-Time Systems Symposium}}},
  author = {Li, Y.-T. S. and Malik, S. and Wolfe, A.},
  year = {1996},
  pages = {254--263},
  publisher = {IEEE Comput. Soc. Press},
  address = {Los Alamitos, CA, USA},
  doi = {10.1109/REAL.1996.563722},
  urldate = {2025-02-23},
  isbn = {978-0-8186-7689-5},
  file = {C:\Users\Henni\Zotero\storage\S3686DYH\Li et al. - 1996 - Cache modeling for real-time software beyond direct mapped instruction caches.pdf}
}

@inproceedings{limAnalysisEDFRM2023,
  title = {Analysis of {{EDF}} and {{RM}} Scheduling Algorithms for Periodic and Aperiodic Tasks in Multi-Core {{ECU}}},
  booktitle = {2023 {{International Technical Conference}} on {{Circuits}}/{{Systems}}, {{Computers}}, and {{Communications}} ({{ITC-CSCC}})},
  author = {Lim, Se Jeong and Kim, Jong Hun and Jeon, Jae Wook},
  year = {2023},
  month = jun,
  pages = {1--6},
  publisher = {IEEE},
  address = {Jeju, Korea, Republic of},
  doi = {10.1109/ITC-CSCC58803.2023.10212836},
  urldate = {2024-11-18},
  copyright = {https://doi.org/10.15223/policy-029},
  isbn = {979-8-3503-2641-3},
  file = {C:\Users\Henni\Zotero\storage\DNJ4W28L\Lim et al. - 2023 - Analysis of EDF and RM scheduling algorithms for periodic and aperiodic tasks in multi-core ECU.pdf}
}

@incollection{lisperSWEETToolWCET2014,
  title = {{{SWEET}} -- {{A Tool}} for {{WCET Flow Analysis}} ({{Extended Abstract}})},
  booktitle = {Leveraging {{Applications}} of {{Formal Methods}}, {{Verification}} and {{Validation}}. {{Specialized Techniques}} and {{Applications}}},
  author = {Lisper, Bj{\"o}rn},
  editor = {Margaria, Tiziana and Steffen, Bernhard},
  year = {2014},
  volume = {8803},
  pages = {482--485},
  publisher = {Springer Berlin Heidelberg},
  address = {Berlin, Heidelberg},
  doi = {10.1007/978-3-662-45231-8_38},
  urldate = {2024-11-07},
  isbn = {978-3-662-45230-1 978-3-662-45231-8},
  langid = {english},
  file = {C:\Users\Henni\Zotero\storage\QR7MM4QE\Lisper - 2014 - SWEET – A Tool for WCET Flow Analysis (Extended Abstract).pdf}
}

@book{liuRealtimeSystems2006,
  title = {Real-Time Systems},
  author = {Liu, Jane WS},
  year = {2006},
  publisher = {Pearson Education India},
  isbn = {81-7758-575-4},
  file = {C:\Users\Henni\Zotero\storage\NPLICR58\Liu - 2006 - Real-time systems.pdf}
}

@article{liuSchedulingAlgorithmsMultiprogramming1973,
  title = {Scheduling Algorithms for Multiprogramming in a Hard-Real-Time Environment},
  author = {Liu, Chung Laung and Layland, James W},
  year = {1973},
  journal = {Journal of the ACM (JACM)},
  volume = {20},
  number = {1},
  pages = {46--61},
  publisher = {ACM New York, NY, USA},
  issn = {0004-5411},
  keywords = {harmonic},
  file = {C:\Users\Henni\Zotero\storage\DRQL7B3Q\Liu - Scheduling Algorithms for Multiprogramming in a Hard-Real-Time Environment.pdf}
}

@article{meinkenMeasurementbasedWCETEstimation,
  title = {Measurement-Based {{WCET}} Estimation in Multicore Real-Time Systems},
  author = {Meinken, S{\"o}ren},
  langid = {english},
  file = {C:\Users\Henni\Zotero\storage\N9K979YX\Meinken - Measurement-based WCET estimation in multicore real-time systems.pdf}
}

@article{mohaqeqiOptimalHarmonicPeriod2018,
  title = {Optimal Harmonic Period Assignment: Complexity Results and Approximation Algorithms},
  shorttitle = {Optimal Harmonic Period Assignment},
  author = {Mohaqeqi, Morteza and Nasri, Mitra and Xu, Yang and Cervin, Anton and {\AA}rz{\'e}n, Karl-Erik},
  year = {2018},
  month = oct,
  journal = {Real-Time Systems},
  volume = {54},
  number = {4},
  pages = {830--860},
  issn = {0922-6443, 1573-1383},
  doi = {10.1007/s11241-018-9304-0},
  urldate = {2025-03-01},
  langid = {english},
  keywords = {harmonic,UHPA},
  file = {C:\Users\Henni\Zotero\storage\BZVLURY9\Mohaqeqi et al. - 2018 - Optimal harmonic period assignment complexity results and approximation algorithms.pdf}
}

@misc{naumannNaumann,
  title = {Naumann},
  author = {Naumann, Yannick},
  file = {C:\Users\Henni\Zotero\storage\BK6IDPGF\Naumann - Naumann.pdf}
}

@incollection{oshanaRealTimeOperatingSystems2006,
  title = {Real-{{Time Operating Systems}} for {{DSP}}},
  booktitle = {{{DSP Software Development Techniques}} for {{Embedded}} and {{Real-Time Systems}}},
  author = {Oshana, Robert},
  year = {2006},
  pages = {261--320},
  publisher = {Elsevier},
  doi = {10.1016/B978-075067759-2/50010-7},
  urldate = {2024-11-07},
  isbn = {978-0-7506-7759-2},
  langid = {english},
  file = {C:\Users\Henni\Zotero\storage\7J6L3H9V\Oshana - 2006 - Real-Time Operating Systems for DSP.pdf}
}

@inproceedings{pillaiNewRealTime2012,
  title = {A New Real Time Simulator for Task Scheduling},
  booktitle = {2012 {{IEEE International Conference}} on {{Computational Intelligence}} and {{Computing Research}}},
  author = {Pillai, Anju S. and Isha, T. B.},
  year = {2012},
  month = dec,
  pages = {1--4},
  publisher = {IEEE},
  address = {Coimbatore, India},
  doi = {10.1109/ICCIC.2012.6510232},
  urldate = {2024-11-07},
  abstract = {There are many new and existing scheduling policies within the field of real time scheduling theory. But, only a few of them are useful for real time implementation. The main difficulty is in reforming the Real Time Operating System (RTOS) to integrate the scheduling policy, which needs a skilled programming. Due to this hinderance, it is difficult to test and evaluate different policies and compare their performances. So a simulation study becomes inevitable. The available simulators mainly refer to only certain class of scheduling problem with particular execution sequence. This paper presents a software simulator which can be used to measure the performance of existing and new scheduling algorithms. The simulator is also integrated with different feasibility analysis and calculation of different scheduling aspects.},
  isbn = {978-1-4673-1344-5 978-1-4673-1342-1 978-1-4673-1343-8},
  langid = {english},
  file = {C:\Users\Henni\Zotero\storage\PZHPBBSW\Pillai und Isha - 2012 - A new real time simulator for task scheduling.pdf}
}

@article{popHolisticSchedulingAnalysis,
  title = {Holistic {{Scheduling}} and {{Analysis}} of {{Mixed Time}}/{{Event- Triggered Distributed Embedded Systems}}},
  author = {Pop, Traian and Eles, Petru and Peng, Zebo},
  abstract = {This paper deals with specific issues related to the design of distributed embedded systems implemented with mixed, eventtriggered and time-triggered tusk sets, which communicate over bus protocols consisting of both static and dynamic phases. Such systems are emerging as the new standard for automotive applications. We have developed a holistic timing analysis and scheduling approach for this category of systems. We have also identified several new design problems characteristic to such hybrid systems. An example relatedto bus access optimization in the context of a mixed static{\textasciitilde}dynamic bus protocol is presented. Experimental results prove the efficiency of such an optimization approach.},
  langid = {english},
  file = {C:\Users\Henni\Zotero\storage\8RGVWHJ5\Pop et al. - Holistic Scheduling and Analysis of Mixed TimeEvent- Triggered Distributed Embedded Systems.pdf}
}

@article{rajputPriorityBasedRobin2012,
  title = {A Priority Based Round Robin {{CPU}} Scheduling Algorithm for Real Time Systems},
  author = {Rajput, Ishwari Singh and Gupta, Deepa},
  year = {2012},
  journal = {International Journal of Innovations in Engineering and Technology},
  volume = {1},
  number = {3},
  pages = {1--11},
  publisher = {Citeseer},
  issn = {2319-1058},
  file = {C:\Users\Henni\Zotero\storage\33C5SJW8\Rajput und Gupta - 2012 - A priority based round robin CPU scheduling algorithm for real time systems.pdf}
}

@article{realCombinedSchedulingTimeTriggered2016,
  title = {Combined {{Scheduling}} of {{Time-Triggered Plans}} and {{Priority Scheduled Task Sets}}},
  author = {Real, Jorge and S{\'a}ez, Sergio and Crespo, Alfons},
  year = {2016},
  month = jul,
  journal = {ACM SIGAda Ada Letters},
  volume = {36},
  number = {1},
  pages = {68--76},
  issn = {1094-3641},
  doi = {10.1145/2971571.2971580},
  urldate = {2024-11-07},
  abstract = {Preemptive, priority-based scheduling on the one hand, and time-triggered scheduling on the other, are the two major techniques in use for development of real-time and embedded software. Both have their advantages and drawbacks with respect to the other, and are commonly adopted in mutual exclusion.},
  langid = {english},
  file = {C:\Users\Henni\Zotero\storage\6U9QFVYX\Real et al. - 2016 - Combined Scheduling of Time-Triggered Plans and Priority Scheduled Task Sets.pdf}
}

@article{reghenzaniDealingUncertaintyPWCET2020,
  title = {Dealing with {{Uncertainty}} in {{pWCET Estimations}}},
  author = {Reghenzani, Federico and Santinelli, Luca and Fornaciari, William},
  year = {2020},
  month = sep,
  journal = {ACM Transactions on Embedded Computing Systems},
  volume = {19},
  number = {5},
  pages = {1--23},
  issn = {1539-9087, 1558-3465},
  doi = {10.1145/3396234},
  urldate = {2025-01-20},
  abstract = {The problem of estimating a tight and safe Worst-Case Execution Time (WCET), needed for certification in safety-critical environment, is a challenging problem for modern embedded systems. A possible solution proposed in past years is to exploit statistical tools to obtain a probability distribution of the WCET. These probabilistic real-time analyses for WCET are, however, subject to errors, even when all the applicability hypotheses are satisfied and verified. This is caused by the uncertainties of the probabilistic-WCET distribution estimator. This article aims at improving the measurement-based probabilistic timing analysis approach providing some techniques to analyze and deal with such uncertainties. The so-called region of acceptance model based on state-of-the-art statistical test procedures is defined over the distribution space parameters. From this model, a set of strategies is derived and discussed to provide the methodology to deal with the trade-off safety/tightness of the WCET estimation. These techniques are then tested over real datasets, including industrial safety-critical applications, to show the increased value of using the proposed approach in probabilistic WCET analyses.},
  langid = {english},
  file = {C\:\\Users\\Henni\\Zotero\\storage\\JY35SN4K\\Reghenzani et al. - 2020 - Dealing with Uncertainty in pWCET Estimations.pdf;C\:\\Users\\Henni\\Zotero\\storage\\X3KITSM9\\3396234.pdf}
}

@article{riceClassesRecursivelyEnumerable1953,
  title = {Classes of Recursively Enumerable Sets and Their Decision Problems},
  author = {Rice, H. G.},
  year = {1953},
  journal = {Transactions of the American Mathematical Society},
  volume = {74},
  number = {2},
  pages = {358--366},
  issn = {0002-9947, 1088-6850},
  doi = {10.1090/S0002-9947-1953-0053041-6},
  urldate = {2025-01-20},
  langid = {english},
  file = {C:\Users\Henni\Zotero\storage\XPTUIZ9W\Rice - 1953 - Classes of recursively enumerable sets and their decision problems.pdf}
}

@inproceedings{saewongAnalysisHierarHical2002,
  title = {Analysis of Hierar Hical Fixed-Priority Scheduling},
  booktitle = {Proceedings 14th {{Euromicro Conference}} on {{Real-Time Systems}}. {{Euromicro RTS}} 2002},
  author = {Saewong, S. and Rajkumar, R.R. and Lehoczky, J.P. and Klein, M.H.},
  year = {2002},
  pages = {152--160},
  publisher = {IEEE Comput. Soc},
  address = {Vienna, Austria},
  doi = {10.1109/EMRTS.2002.1019197},
  urldate = {2024-11-18},
  isbn = {978-0-7695-1665-3},
  file = {C:\Users\Henni\Zotero\storage\EQ7I3RIU\Saewong et al. - 2002 - Analysis of hierar hical fixed-priority scheduling.pdf}
}

@article{SchedulingPeriodicAperiodic,
  title = {Scheduling Periodic and Aperiodic Tasks in Hard Real-Time Computing Systems},
  abstract = {Scheduling periodic and aperiodic tasks to meet their time constraints has been an important issue in the design of real-time computing systems. Usually, the task scheduling algorithms in such systems must satisfy the deadlines of periodic tasks and provide fast response times for aperiodic tasks. A simple and efficient approach to scheduling real-time tasks is the use of a periodic server in a static preemptive scheduling algorithm. Periodic tasks, including the server, are scheduled at priori to meet their deadlines according to the knowledge of their periods and computation times. The scheduling of aperiodic tasks is then managed by the periodic server during its service time. In this paper, a new scheduling algorithm is proposed. The new algorithm creates a periodic server which will have the highest priority but not necessarily the shortest period. The server is suspended to reduce the overhead if there are no aperiodic tasks waiting, and is activated immediately upon the arrival of the next aperiodic task. After activated, the server performs its duty periodically until all waiting aperiodic tasks are completed. For a set of tasks scheduled by this algorithm, the deadlines of periodic tasks are guaranteed by a deterministic feasibility check, and the mean response time of aperiodic tasks are estimated using a queueing model. Based on the analytical results, we can determine the period and service time of the server producing the minimum mean response time for aperiodic tasks. The analytical results are compared with simulation results to demonstrate the correctness of our model.},
  langid = {english},
  file = {C:\Users\Henni\Zotero\storage\9HIFM4MH\Scheduling periodic and aperiodic tasks in hard real-time computing systems.pdf}
}

@article{schoeberlWorstCasePerformanceRealTime2025,
  title = {Worst-{{Case Performance}} for {{Real-Time Systems}}},
  author = {Schoeberl, Martin and Jellum, Erling and Lin, Shaokai and Jerad, Chadlia and Maroun, Emad Jacob and Lohstroh, Marten and Lee, Edward A},
  year = {2025},
  month = jan,
  journal = {Research Directions: Cyber-Physical Systems},
  pages = {1--9},
  issn = {2753-8516},
  doi = {10.1017/cbp.2025.1},
  urldate = {2025-02-16},
  abstract = {Abstract             Real-time systems need to be built out of tasks for which the worst-case execution time is known. To enable accurate estimates of worst-case execution time, some researchers propose to build processors that simplify that analysis. These architectures are called precision-timed machines or time-predictable architectures. However, what does this term mean? This paper explores the meaning of time predictability and how it can be quantified. We show that time predictability is hard to quantify. Rather, the worst-case performance as the combination of a processor, a compiler, and a worst-case execution time analysis tool is an important property in the context of real-time systems. Note that the actual software has implications as well on the worst-case performance. We propose to define a standard set of benchmark programs that can be used to evaluate a time-predictable processor, a compiler, and a worst-case execution time analysis tool. We define worst-case performance as the geometric mean of worst-case execution time bounds on a standard set of benchmark programs.},
  copyright = {http://creativecommons.org/licenses/by-nc-nd/4.0/},
  langid = {english},
  file = {C:\Users\Henni\Zotero\storage\RQT69TMM\Schoeberl et al. - 2025 - Worst-Case Performance for Real-Time Systems.pdf}
}

@inproceedings{shahMeasurementBasedWCET2014,
  title = {Measurement Based {{WCET Analysis}} for {{Multi-core Architectures}}},
  booktitle = {Proceedings of the 22nd {{International Conference}} on {{Real-Time Networks}} and {{Systems}}},
  author = {Shah, Hardik and Coombes, Andrew and Raabe, Andreas and Huang, Kai and Knoll, Alois},
  year = {2014},
  month = oct,
  pages = {257--266},
  publisher = {ACM},
  address = {Versaille France},
  doi = {10.1145/2659787.2659819},
  urldate = {2024-11-07},
  abstract = {The interference on shared resources caused by concurrently executing applications unpredictably prolongs their execution. Hence, determination of the Worst Case Execution Time (Wcet) of applications executing on shared memory multi-core processors is hard to estimate. This hinders the adoption of Commercial Off The Shelf (Cots) multicore processors in hard real-time systems. The existing techniques opt for tailored multi-core architectures to provide high computation power at predictable execution time. However, this approach yields poor resource utilization and high costs. In this paper, we present a technique to measure the Wcet of applications on multi-core architectures using existing measurement based timing analysis tools. Our technique has a minor area impact ({$\approx$} 5\%). However, this impact is limited to the emulation devices only and production chips remain unchanged. Thus, our technique does not impact performance of the Cots chips by any ways. The technique is demonstrated by measuring Wcet of benchmark applications using the RapiTime timing analysis tool. The tests are conducted on a quad-core NIOS II processor on an Altera Fpga.},
  isbn = {978-1-4503-2727-5},
  langid = {english},
  file = {C:\Users\Henni\Zotero\storage\R5C36TPY\Shah et al. - 2014 - Measurement based WCET Analysis for Multi-core Architectures.pdf}
}

@inproceedings{shiMultiprocessorSynchronizationPeriodic2019,
  title = {Multiprocessor {{Synchronization}} of {{Periodic Real-Time Tasks Using Dependency Graphs}}},
  booktitle = {2019 {{IEEE Real-Time}} and {{Embedded Technology}} and {{Applications Symposium}} ({{RTAS}})},
  author = {Shi, Junjie and Ueter, Niklas and Von Der Bruggen, Georg and Chen, Jian-jia},
  year = {2019},
  month = apr,
  pages = {279--292},
  publisher = {IEEE},
  address = {Montreal, QC, Canada},
  doi = {10.1109/RTAS.2019.00031},
  urldate = {2024-11-07},
  abstract = {When considering recurrent real-time tasks in multiprocessor systems, access to shared resources, via so-called critical sections, can jeopardize the schedulability of the system. The reason is that resource access is mutual exclusive and a task must finish its execution of the critical section before another task can access the same resource. Therefore, the problem of multiprocessor synchronization has been extensively studied since the 1990s, and a large number of multiprocessor resource sharing protocols have been developed and analyzed. Most protocols assume work-conserving scheduling algorithms which make it impossible to schedule task sets where a critical section of one task is longer than the relative deadline of another task that accesses the same resource. The only known exception to the work-conserving paradigm is the recently presented Dependency Graph Approach where the order in which tasks access a shared resource is not determined online, but based on a pre-computed dependency graph. Since the initial work only considers framebased task systems, this paper extends the Dependency Graph Approach to periodic task systems. We point out the connection to the uniprocessor non-preemptive scheduling problem and exploit the related algorithms to construct dependency graphs for each resource. To schedule the derived dependency graphs, List scheduling is combined with an earliest-deadline-first heuristic. We evaluated the performance considering synthesized task sets under different configurations, where a significant improvement of the acceptance ratio compared to other resource sharing protocols is observed. Furthermore, to show the applicability in real-world systems, we detail the implementation in LITMUSRT and report the resulting scheduling overheads.},
  copyright = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/IEEE.html},
  isbn = {978-1-7281-0678-6},
  langid = {english},
  file = {C:\Users\Henni\Zotero\storage\9M2YSSDF\Shi et al. - 2019 - Multiprocessor Synchronization of Periodic Real-Time Tasks Using Dependency Graphs.pdf}
}

@article{shindeComparisonRealTime2017,
  title = {Comparison of {{Real Time Task Scheduling Algorithms}}},
  author = {Shinde, Vijayshree and C., Seema},
  year = {2017},
  month = jan,
  journal = {International Journal of Computer Applications},
  volume = {158},
  number = {6},
  pages = {37--41},
  issn = {09758887},
  doi = {10.5120/ijca2017912832},
  urldate = {2025-02-03},
  file = {C:\Users\Henni\Zotero\storage\J4WXUIUU\Shinde und C. - 2017 - Comparison of Real Time Task Scheduling Algorithms.pdf}
}

@article{shinReservationbasedAlgorithmScheduling1995,
  title = {A Reservation-Based Algorithm for Scheduling Both Periodic and Aperiodic Real-Time Tasks},
  author = {Shin, K.G. and {Yi-Chieh Chang}},
  year = {1995},
  month = dec,
  journal = {IEEE Transactions on Computers},
  volume = {44},
  number = {12},
  pages = {1405--1419},
  issn = {00189340},
  doi = {10.1109/12.477246},
  urldate = {2025-02-25},
  copyright = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/IEEE.html}
}

@article{singhOptimizedRobinScheduling2010,
  title = {An Optimized Round Robin Scheduling Algorithm for {{CPU}} Scheduling},
  author = {Singh, Ajit and Goyal, Priyanka and Batra, Sahil},
  year = {2010},
  journal = {International Journal on Computer Science and Engineering},
  volume = {2},
  number = {07},
  pages = {2383--2385},
  publisher = {Citeseer},
  file = {C:\Users\Henni\Zotero\storage\CQRG9Y6J\Singh et al. - 2010 - An optimized round robin scheduling algorithm for CPU scheduling.pdf}
}

@article{stankovicRealtimeOperatingSystems2004,
  title = {Real-Time Operating Systems},
  author = {Stankovic, John A and Rajkumar, Raj},
  year = {2004},
  journal = {Real-Time Systems},
  volume = {28},
  number = {2-3},
  pages = {237--253},
  publisher = {Springer Nature BV},
  issn = {0922-6443},
  file = {C:\Users\Henni\Zotero\storage\4N5VUM4P\Stankovic und Rajkumar - 2004 - Real-time operating systems.pdf}
}

@article{syedEfficientOfflineScheduling2019,
  title = {Efficient Offline Scheduling of Task-Sets with Complex Constraints on Large Distributed Time-Triggered Systems},
  author = {Syed, Ali and Fohler, Gerhard},
  year = {2019},
  month = apr,
  journal = {Real-Time Systems},
  volume = {55},
  number = {2},
  pages = {209--247},
  issn = {0922-6443, 1573-1383},
  doi = {10.1007/s11241-018-9320-0},
  urldate = {2024-11-07},
  abstract = {Modern real-time applications like avionics and Internet-of-Things are required to aggregate more features and functionality with less production costs. Future applications like CityAirbus and autonomous driving require large distributed systems to deliver expected services and performance. For such systems, scheduling large set of applications may lead to contradicting problems, e.g., resource scarcity and swap (size, weight and power). The time-triggered (TT) computation model has the potential to ease the way for solving all these issues. However, TT scheduling poses several challenges including complex network architectures, co-synthesis of allocation/scheduling and complex constraints (e.g., precedence, latency, reliability, etc.). Although stateof-the-art processor and network scheduling approaches can be used to generate TT schedules for small to medium sized systems, they fail to provide solutions for large distributed systems. In this paper, we discuss the design of a modular, scalable and flexible scheduler for large distributed TT networked systems. We introduce a novel search-space pruning technique, based on the response-times to generate schedules for large systems within reasonable time. Based on our modular scheduler design, we also provide an extension for TTEthernet networks. Through extensive evaluation, we demonstrate that our scheduler is capable of fulfilling the demands of modern and future real-time applications and that it dominates the state-of-the-art TT scheduling approaches in terms of schedulability and run-times.},
  langid = {english},
  file = {C:\Users\Henni\Zotero\storage\2W74R2IU\Syed und Fohler - 2019 - Efficient offline scheduling of task-sets with complex constraints on large distributed time-trigger.pdf}
}

@article{tabuadaEventTriggeredRealTimeScheduling2007,
  title = {Event-{{Triggered Real-Time Scheduling}} of {{Stabilizing Control Tasks}}},
  author = {Tabuada, Paulo},
  year = {2007},
  month = sep,
  journal = {IEEE Transactions on Automatic Control},
  volume = {52},
  number = {9},
  pages = {1680--1685},
  issn = {0018-9286},
  doi = {10.1109/TAC.2007.904277},
  urldate = {2024-11-07},
  abstract = {In this note, we revisit the problem of scheduling stabilizing control tasks on embedded processors. We start from the paradigm that a real-time scheduler could be regarded as a feedback controller that decides which task is executed at any given instant. This controller has for objective guaranteeing that (control unrelated) software tasks meet their deadlines and that stabilizing control tasks asymptotically stabilize the plant. We investigate a simple event-triggered scheduler based on this feedback paradigm and show how it leads to guaranteed performance thus relaxing the more traditional periodic execution requirements.},
  copyright = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/IEEE.html},
  langid = {english},
  file = {C:\Users\Henni\Zotero\storage\PDPH9PR9\Tabuada - 2007 - Event-Triggered Real-Time Scheduling of Stabilizing Control Tasks.pdf}
}

@article{vermaRatemonotonicVsEarly2018,
  title = {Rate-Monotonic vs Early Deadline First Scheduling: {{A}} Review},
  author = {Verma, Chaman and Stoffov{\'a}, Veronika and Ill{\'e}s, Zolt{\'a}n},
  year = {2018},
  journal = {Proceeding of Education Technology-Computer science in building better future},
  pages = {188--193},
  publisher = {{University of Technology and Humanities}},
  file = {C:\Users\Henni\Zotero\storage\XHZ9WBKN\Verma et al. - 2018 - Rate-monotonic vs early deadline first scheduling A review.pdf}
}

@article{wagemannGenEBenchmarkGenerator2015,
  title = {{{GenE}}: {{A Benchmark Generator}} for {{WCET Analysis}}},
  shorttitle = {{{GenE}}},
  author = {W{\"a}gemann, Peter and Distler, Tobias and H{\"o}nig, Timo and Sieh, Volkmar and {Schr{\"o}der-Preikschat}, Wolfgang},
  year = {2015},
  journal = {OASIcs, Volume 47, WCET 2015},
  volume = {47},
  pages = {33--43},
  publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik},
  issn = {2190-6807},
  doi = {10.4230/OASICS.WCET.2015.33},
  urldate = {2024-11-07},
  abstract = {The fact that many benchmarks for evaluating worst-case execution time (WCET) analysis tools are based on real-world applications greatly increases the value of their results. However, at the same time, the complexity of these programs makes it difficult, sometimes even impossible, to obtain all corresponding flow facts (i.e., loop bounds, infeasible paths, and input values triggering the WCET), which are essential for a comprehensive evaluation. In this paper, we address this problem by presenting GenE, a benchmark generator that in addition to source code also provides the flow facts of the benchmarks created. To generate a new benchmark, the tool combines code patterns that are commonly found in real-time applications and are challenging for WCET analyzers. By keeping track of how patterns are put together, GenE is able to determine the flow facts of the resulting benchmark based on the known flow facts of the patterns used. Using this information, it is straightforward to synthesize the accurate WCET, which can then serve as a baseline for the evaluation of WCET analyzers.},
  collaborator = {Cazorla, Francisco J.},
  copyright = {Creative Commons Attribution 3.0 Unported license, info:eu-repo/semantics/openAccess},
  isbn = {9783939897958},
  langid = {english},
  keywords = {benchmark generation,flow facts,WCET,WCET Tool Challenge},
  file = {C:\Users\Henni\Zotero\storage\9AV576YF\Wägemann et al. - 2015 - GenE A Benchmark Generator for WCET Analysis.pdf}
}

@inproceedings{wangHarmonicFixedpriorityScheduling2016,
  title = {On Harmonic Fixed-Priority Scheduling of Periodic Real-Time Tasks with Constrained Deadlines},
  booktitle = {Proceedings of the 53rd {{Annual Design Automation Conference}}},
  author = {Wang, Tianyi and Han, Qiushi and Sha, Shi and Wen, Wujie and Quan, Gang and Qiu, Meikang},
  year = {2016},
  month = jun,
  pages = {1--6},
  publisher = {ACM},
  address = {Austin Texas},
  doi = {10.1145/2897937.2898055},
  urldate = {2025-02-17},
  isbn = {978-1-4503-4236-0},
  langid = {english},
  file = {C:\Users\Henni\Zotero\storage\EB58NBGM\Wang et al. - 2016 - On harmonic fixed-priority scheduling of periodic real-time tasks with constrained deadlines.pdf}
}

@article{wilhelmWorstcaseExecutiontimeProblem2008,
  title = {The Worst-Case Execution-Time Problem---Overview of Methods and Survey of Tools},
  author = {Wilhelm, Reinhard and Engblom, Jakob and Ermedahl, Andreas and Holsti, Niklas and Thesing, Stephan and Whalley, David and Bernat, Guillem and Ferdinand, Christian and Heckmann, Reinhold and Mitra, Tulika and Mueller, Frank and Puaut, Isabelle and Puschner, Peter and Staschulat, Jan and Stenstr{\"o}m, Per},
  year = {2008},
  month = apr,
  journal = {ACM Transactions on Embedded Computing Systems},
  volume = {7},
  number = {3},
  pages = {1--53},
  issn = {1539-9087, 1558-3465},
  doi = {10.1145/1347375.1347389},
  urldate = {2025-02-14},
  abstract = {The determination of upper bounds on execution times, commonly called worst-case execution times (WCETs), is a necessary step in the development and validation process for hard real-time systems. This problem is hard if the underlying processor architecture has components, such as caches, pipelines, branch prediction, and other speculative components. This article describes different approaches to this problem and surveys several commercially available tools               1               and research prototypes.},
  langid = {english},
  file = {C:\Users\Henni\Zotero\storage\MDX68EDT\Wilhelm et al. - 2008 - The worst-case execution-time problem—overview of methods and survey of tools.pdf}
}

@inproceedings{xuHarmonicSchedulingControl2016,
  title = {Harmonic {{Scheduling}} and {{Control Co-design}}},
  booktitle = {2016 {{IEEE}} 22nd {{International Conference}} on {{Embedded}} and {{Real-Time Computing Systems}} and {{Applications}} ({{RTCSA}})},
  author = {Xu, Yang and Cervin, Anton and Arzen, Karl-Erik},
  year = {2016},
  month = aug,
  pages = {182--187},
  publisher = {IEEE},
  address = {Daegu, South Korea},
  doi = {10.1109/RTCSA.2016.44},
  urldate = {2025-01-26},
  isbn = {978-1-5090-2479-7},
  file = {C:\Users\Henni\Zotero\storage\2QWPS2LU\Xu et al. - 2016 - Harmonic Scheduling and Control Co-design.pdf}
}

@article{yangMachineLearningBased2024,
  title = {Machine Learning--Based Integration Develops a Stress Response Stated {{T}} Cell ({{Tstr}})--Related Score for Predicting Outcomes in Clear Cell Renal Cell Carcinoma},
  author = {Yang, Shuai and Han, Zhaodong and Tan, Zeheng and Wu, Zhenjie and Ye, Jianheng and Cai, Shanghua and Feng, Yuanfa and He, Huichan and Wen, Biyan and Zhu, Xuejin},
  year = {2024},
  journal = {International Immunopharmacology},
  volume = {132},
  pages = {112017},
  publisher = {Elsevier},
  issn = {1567-5769}
}
